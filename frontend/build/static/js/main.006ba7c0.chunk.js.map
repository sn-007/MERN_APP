{"version":3,"sources":["components/Users/UsersList.js","components/Common/Home.js","components/Common/Register.js","components/templates/Navbar.js","components/Users/Profile.js","components/recregister.js","App.js","serviceWorker.js","index.js"],"names":["UsersList","props","state","users","sortedUsers","sortName","renderIcon","bind","sortChange","axios","get","then","response","setState","data","catch","error","console","log","array","this","flag","sort","a","b","undefined","date","Date","Grid","container","item","xs","md","lg","List","component","aria-label","ListItem","text","TextField","id","label","fullWidth","InputProps","endAdornment","InputAdornment","IconButton","button","noValidate","autoComplete","Divider","divider","Autocomplete","options","getOptionLabel","option","name","style","width","renderInput","params","variant","Paper","Table","size","TableHead","TableRow","TableCell","Button","onClick","TableBody","map","user","ind","key","email","Component","Home","Register","onChangeUsername","onChangeEmail","onSubmit","event","target","value","e","preventDefault","newUser","now","post","res","alert","className","type","onChange","NavBar","to","Profile","sortClicked","CreateRec","phone","password","onChangename","onChangephone","onChangepassword","newRec","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.006ba7c0.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\n\nclass UsersList extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {users: [],sortedUsers: [], sortName:true};\n        this.renderIcon = this.renderIcon.bind(this);\n        this.sortChange = this.sortChange.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/user')\n             .then(response => {\n                 this.setState({users: response.data, sortedUsers:response.data});\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n    }\n\n    sortChange(){\n/**\n *      Note that this is sorting only at front-end.\n */\n        var array = this.state.users;\n        var flag = this.state.sortName;\n        array.sort(function(a, b) {\n            if(a.date != undefined && b.date != undefined){\n                return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            users:array,\n            sortName:!this.state.sortName,\n        })\n    }\n\n    renderIcon(){\n        if(this.state.sortName){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container>\n                <Grid item xs={12} md={3} lg={3}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                                        <h3>Filters</h3>\n                        </ListItem>\n                    </List>\n                </Grid>\n                    <Grid item xs={12} md={9} lg={9}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <TextField \n                        id=\"standard-basic\" \n                        label=\"Search\" \n                        fullWidth={true}   \n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    <IconButton>\n                                        <SearchIcon />\n                                    </IconButton>\n                                </InputAdornment>\n                            )}}\n                        />\n                    </List>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12} md={3} lg={3}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n\n                            <ListItem button>\n                                <form noValidate autoComplete=\"off\">\n                                    <label>Salary</label>\n                                    <TextField id=\"standard-basic\" label=\"Enter Min\" fullWidth={true} />\n                                    <TextField id=\"standard-basic\" label=\"Enter Max\" fullWidth={true}/>\n                                </form>                                                                \n                            </ListItem>\n                            <Divider />\n                            <ListItem button divider>\n                                <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={this.state.users}\n                                    getOptionLabel={(option) => option.name}\n                                    style={{ width: 300 }}\n                                    renderInput={(params) => <TextField {...params} label=\"Select Names\" variant=\"outlined\" />}\n                                />\n                            </ListItem>\n                        </List>\n                    </Grid>\n                    <Grid item xs={12} md={9} lg={9}>\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell> <Button onClick={this.sortChange}>{this.renderIcon()}</Button>Date</TableCell>\n                                            <TableCell>Name</TableCell>\n                                            <TableCell>Email</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.users.map((user,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{user.date}</TableCell>\n                                            <TableCell>{user.name}</TableCell>\n                                            <TableCell>{user.email}</TableCell>\n                                        </TableRow>\n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        )\n    }\n}\n\nexport default UsersList;","import React, {Component} from 'react';\nimport axios from 'axios';\n\nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            name:'',\n            email:''\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                Happy Coding!\n           </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport axios from 'axios';\n\nexport default class Register extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            email: '',\n            date:null\n        }\n\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    \n    onChangeUsername(event) {\n        this.setState({ name: event.target.value });\n    }\n\n    onChangeEmail(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            date: Date.now()\n        }\n        axios.post('http://localhost:4000/user/register', newUser)\n             .then(res => {alert(\"Created\\t\" + res.data.name);console.log(res.data)})\n             ;\n\n        this.setState({\n            name: '',\n            email: '',\n            date:null\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Username: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.name}\n                               onChange={this.onChangeUsername}\n                               />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Email: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.email}\n                               onChange={this.onChangeEmail}\n                               />  \n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\"/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nexport default class NavBar extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>                \r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <Link to=\"/\" className=\"navbar-brand\">Demo</Link>\r\n                    <div className=\"collapse navbar-collapse\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"navbar-item\">\r\n                                <Link to=\"/users\" className=\"nav-link\">Users</Link>\r\n                            </li>\r\n                            <li className=\"navbar-item\">\r\n                                <Link to=\"/register\" className=\"nav-link\">Register</Link>\r\n                            </li>\r\n                            <li className=\"navbar-item\">\r\n                                <Link to=\"/profile\" className=\"nav-link\">My Profile</Link>\r\n                            </li>                            \r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nclass Profile extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {users: [],sortName:true};\r\n        this.sortClicked = this.sortClicked.bind(this);\r\n        this.renderIcon = this.renderIcon.bind(this);\r\n        this.sortChange = this.sortChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/user')\r\n             .then(response => {\r\n                 this.setState({users: response.data});\r\n             })\r\n             .catch(function(error) {\r\n                 console.log(error);\r\n             })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        axios.get('http://localhost:4000/user')\r\n             .then(response => {\r\n                 this.setState({users: response.data});\r\n             })\r\n             .catch(function(error) {\r\n                 console.log(error);\r\n             })        \r\n    }\r\n\r\n    sortClicked(){\r\n        console.log(this.state);\r\n    }\r\n\r\n    sortChange(){\r\n        var array = this.state.users;\r\n        var flag = this.state.sortName;\r\n        array.sort(function(a, b) {\r\n            if(a.date != undefined && b.date != undefined){\r\n                return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          }); // Sort youngest first\r\n        this.setState({\r\n            users:array,\r\n            sortName:!this.state.sortName,\r\n        })\r\n    }\r\n\r\n    renderIcon(){\r\n        if(this.state.sortName){\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid item xs={12} md={12} lg={12}>\r\n                    <Paper>\r\n                            \r\n                    </Paper>               \r\n                </Grid>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport StyledRadio from \"@material-ui/core/Radio\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default class CreateRec extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      password: \"\",\n    };\n\n    this.onChangename = this.onChangename.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangephone = this.onChangephone.bind(this);\n    this.onChangepassword = this.onChangepassword.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChangename(event) {\n    this.setState({ name: event.target.value });\n  }\n  onChangepassword(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  onChangeEmail(event) {\n    this.setState({ email: event.target.value });\n  }\n  onChangephone(event) {\n    this.setState({ phone: event.target.value });\n  }\n  componentDidMount() {\n}\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.type);\n    const newRec = {\n      name: this.state.name,\n      email: this.state.email,\n      phone: this.state.phone,\n      password: this.state.password,\n    };\n    let str = \"http://localhost:5000/user/rec/register\";\n    axios.post(str, newRec).then(res => {\n      console.log(res.data);\n      if (res.data.error) {\n        alert(\"Already existed or Empty fields \");\n      }\n    });\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      password: \"\"\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        \n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Name: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.name}\n              onChange={this.onChangename}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Email: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.email}\n              onChange={this.onChangeEmail}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Password: </label>\n            <input\n              type=\"type\"\n              className=\"form-control\"\n              value={this.state.password}\n              onChange={this.onChangepassword}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Mobile Number: </label>\n            <input\n              type=\"Number\"\n              className=\"form-control\"\n              value={this.state.phone}\n              onChange={this.onChangephone}\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Create User\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport UsersList from './components/Users/UsersList'\nimport Home from './components/Common/Home'\nimport Register from './components/Common/Register'\nimport Navbar from './components/templates/Navbar'\nimport Profile from './components/Users/Profile'\nimport CreateRec from './components/recregister'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Navbar/>\n        <br/>\n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/users\" exact component={UsersList}/>\n        <Route path=\"/register\" component={Register}/>\n        <Route path=\"/profile\" component={Profile}/>\n        <Route path=\"/recregister\" component={CreateRec}/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}